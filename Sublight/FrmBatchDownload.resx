<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAzGYzAP///wCZMwAAAAAAAMyZmQCAAIAAgIAAAMDAwADA3MAA8MqmADMA
        AAQAADMEMwAzBDMzAAQWFhYEHBwcBCIiIgQpKSkEVVVVBE1NTQRCQkIEOTk5BIB8/wRQUP8EkwDWBP/s
        zATG1u8E1ufnBJCprQQA/zMEAABmBAAAmQQAAMwEADMABAAzMwQAM2YEADOZBAAzzAQAM/8EAGYABABm
        MwQAZmYEAGaZBABmzAQAZv8EAJkABACZMwQAmWYEAJmZBACZzAQAmf8EAMwABADMMwQAzGYEAMyZBADM
        zAQAzP8EAP9mBAD/mQQA/8wEM/8ABP8AMwQzAGYEMwCZBDMAzAQzAP8E/zMABDMzMwQzM2YEMzOZBDMz
        zAQzM/8EM2YABDNmMwQzZmYEM2aZBDNmzAQzZv8EM5kABDOZMwQzmWYEM5mZBDOZzAQzmf8EM8wABDPM
        MwQzzGYEM8yZBDPMzAQzzP8EM/8zBDP/ZgQz/5kEM//MBDP//wRmAAAEZgAzBGYAZgRmAJkEZgDMBGYA
        /wRmMwAEZjMzBGYzZgRmM5kEZjPMBGYz/wRmZgAEZmYzBGZmZgRmZpkEZmbMBGaZAARmmTMEZplmBGaZ
        mQRmmcwEZpn/BGbMAARmzDMEZsyZBGbMzARmzP8EZv8ABGb/MwRm/5kEZv/MBMwA/wT/AMwEmZkABJkz
        mQSZAJkEmQDMBJkAAASZMzMEmQBmBJkzzASZAP8EmWYABJlmMwSZM2YEmWaZBJlmzASZM/8EmZkzBJmZ
        ZgSZmZkEmZnMBJmZ/wSZzAAEmcwzBGbMZgSZzJkEmczMBJnM/wSZ/wAEmf8zBJnMZgSZ/5kEmf/MBJn/
        /wTMAAAEmQAzBMwAZgTMAJkEzADMBJkzAATMMzMEzDNmBMwzmQTMM8wEzDP/BMxmAATMZjMEmWZmBMxm
        mQTMZswEmWb/BMyZAATMmTMEzJlmBMyZmQTMmcwEzJn/BMzMAATMzDMEzMxmBMzMmQTMzMwEzMz/BMz/
        AATM/zMEmf9mBMz/mQTM/8wEzP//BMwAMwT/AGYE/wCZBMwzAAT/MzME/zNmBP8zmQT/M8wE/zP/BP9m
        AAT/ZjMEzGZmBP9mmQT/ZswEzGb/BP+ZAAT/mTME/5lmBP+ZmQT/mcwE/5n/BP/MAAT/zDME/8xmBP/M
        mQT/zMwE/8z/BP//MwTM/2YE//+ZBP//zARmZv8EZv9mBGb//wT/ZmYE/2b/BP//ZgQhAKUEX19fBHd3
        dwSGhoYElpaWBMvLywSysrIE19fXBN3d3QTj4+ME6urqBPHx8QT4+PgE8Pv/AKSgoACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAMDAwMDAwMDAwMDAwAABAQCAgMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAAAEBAICAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAAAEBAQECAgMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwAAAQEBAQICAwMDAwMDAwMDAwMDAAAAAAAAAAAAAAAAAAABAQEBAQEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAEBAQEBAQAAAAAAAAAAAAAAAAAAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQAAAAABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAAAAAEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEAAAAAAQEBAgICAgICAgICAgICAgICAgICAgICAgEBAQAAAAABAQECAgICAgICAgICAgIC
        AgICAgICAgICAQEBAAAAAAEBAQICAgICAgICAgICAgICAgICAgICAgIBAQEAAAAAAQEBAgICAgICAgIC
        AgICAgICAgICAgICAgEBAQAAAAABAQECAgICAgICAgICAgICAgICAgICAgICAQEBAAAAAAEBAQICAgIC
        AgICAgICAgICAgICAgICAgIBAQEAAAAAAQEBAgICAgICAgICAgICAgICAgICAgICAgEBAQAAAAABAQEC
        AgICAgICAgICAgICAgICAgICAgICAQEBAAAAAAEBAQICAgICAgICAgICAgICAgICAgICAgIBAQEAAAAA
        AQEBAgICAgICAgICAgICAgICAgICAgICAgEBAQAAAAABAQECAgICAgICAgICAgICAgICAgICAgICAQEB
        AAAAAAEBAQICAgICAgICAgICAgICAgICAgICAgIBAQEAAAAAAQEBAgICAgICAgICAgICAgICAgICAgIC
        AgEBAQAAAAABAQECAgICAgICAgICAgICAgICAgICAgICAQEBAAAAAAEBAQICAgICAgICAgICAgICAgIC
        AgICAgIBAQEAAAAAAQEBAgICAgICAgICAgICAgICAgICAgICAgEBAQAAAAABAQECAgICAgICAgICAgIC
        AgICAgICAgICAQEBAAAAAAEBAQICAgICAgICAgICAgICAgICAgICAgIBAQEAAAAAAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQAAAAABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAAAAAEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/8D////A////wD///8A//AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADMZjMA////AJkzAADq6uoAAAAAAMyZZgDMmZkAwMDAAMDcwADwyqYAMwAABAAA
        MwQzADMEMzMABBYWFgQcHBwEIiIiBCkpKQRVVVUETU1NBEJCQgQ5OTkEgHz/BFBQ/wSTANYE/+zMBMbW
        7wTW5+cEkKmtBAD/MwQAAGYEAACZBAAAzAQAMwAEADMzBAAzZgQAM5kEADPMBAAz/wQAZgAEAGYzBABm
        ZgQAZpkEAGbMBABm/wQAmQAEAJkzBACZZgQAmZkEAJnMBACZ/wQAzAAEAMwzBADMZgQAzJkEAMzMBADM
        /wQA/2YEAP+ZBAD/zAQz/wAE/wAzBDMAZgQzAJkEMwDMBDMA/wT/MwAEMzMzBDMzZgQzM5kEMzPMBDMz
        /wQzZgAEM2YzBDNmZgQzZpkEM2bMBDNm/wQzmQAEM5kzBDOZZgQzmZkEM5nMBDOZ/wQzzAAEM8wzBDPM
        ZgQzzJkEM8zMBDPM/wQz/zMEM/9mBDP/mQQz/8wEM///BGYAAARmADMEZgBmBGYAmQRmAMwEZgD/BGYz
        AARmMzMEZjNmBGYzmQRmM8wEZjP/BGZmAARmZjMEZmZmBGZmmQRmZswEZpkABGaZMwRmmWYEZpmZBGaZ
        zARmmf8EZswABGbMMwRmzJkEZszMBGbM/wRm/wAEZv8zBGb/mQRm/8wEzAD/BP8AzASZmQAEmTOZBJkA
        mQSZAMwEmQAABJkzMwSZAGYEmTPMBJkA/wSZZgAEmWYzBJkzZgSZZpkEmWbMBJkz/wSZmTMEmZlmBJmZ
        mQSZmcwEmZn/BJnMAASZzDMEZsxmBJnMmQSZzMwEmcz/BJn/AASZ/zMEmcxmBJn/mQSZ/8wEmf//BMwA
        AASZADMEzABmBMwAmQTMAMwEmTMABMwzMwTMM2YEzDOZBMwzzATMM/8EzGYABMxmMwSZZmYEzGaZBMxm
        zASZZv8EzJkABMyZMwTMmWYEzJmZBMyZzATMmf8EzMwABMzMMwTMzGYEzMyZBMzMzATMzP8EzP8ABMz/
        MwSZ/2YEzP+ZBMz/zATM//8EzAAzBP8AZgT/AJkEzDMABP8zMwT/M2YE/zOZBP8zzAT/M/8E/2YABP9m
        MwTMZmYE/2aZBP9mzATMZv8E/5kABP+ZMwT/mWYE/5mZBP+ZzAT/mf8E/8wABP/MMwT/zGYE/8yZBP/M
        zAT/zP8E//8zBMz/ZgT//5kE///MBGZm/wRm/2YEZv//BP9mZgT/Zv8E//9mBCEApQRfX18Ed3d3BIaG
        hgSWlpYEy8vLBLKysgTX19cE3d3dBOPj4wTq6uoE8fHxBPj4+ATw+/8ApKCgAICAgAAAAP8AAP8AAAD/
        /wD/AAAA/wD/AP//AAD///8ABAQEBAQEAAYEBAQEBAQEBAQEBAQEBAABBQIEBAQEBAQAAAAAAAAAAQED
        AAAAAAAAAAEBAQEBAQEBAQEBAQEBAAABAQEBAQEBAQEBAQEBAQAAAQECAgICAgICAgICAQEAAAEBAgIC
        AgICAgICAgEBAAABAQICAgICAgICAgIBAQAAAQECAgICAgICAgICAQEAAAEBAgICAgICAgICAgEBAAAB
        AQICAgICAgICAgIBAQAAAQECAgICAgICAgICAQEAAAEBAgICAgICAgICAgEBAAABAQEBAQEBAQEBAQEB
        AQAAAQEBAQEBAQEBAQEBAQEAAAAAAAAAAAAAAAAAAAAAAPz/AAD8PwAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>